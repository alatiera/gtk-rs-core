initSidebarItems({"fn":[["access","A wrapper for the POSIX `access()` function. This function is used to test a pathname for one or several of read, write or execute permissions, or just existence."],["application_name",""],["base64_decode","Decode a sequence of Base-64 encoded text into binary data. Note that the returned binary data is not necessarily zero-terminated, so it should not be used as a character string."],["base64_encode","Encode a sequence of binary data into its Base-64 stringified representation."],["check_version","Checks that the GLib library in use is compatible with the given version."],["codeset",""],["compute_checksum_for_bytes","Computes the checksum for a binary `data`. This is a convenience wrapper for [`Checksum::new()`][crate::Checksum::new()], [`Checksum::string()`][crate::Checksum::string()] and `g_checksum_free()`."],["compute_checksum_for_data","Computes the checksum for a binary `data` of `length`. This is a convenience wrapper for [`Checksum::new()`][crate::Checksum::new()], [`Checksum::string()`][crate::Checksum::string()] and `g_checksum_free()`."],["compute_hmac_for_bytes","Computes the HMAC for a binary `data`. This is a convenience wrapper for `g_hmac_new()`, `g_hmac_get_string()` and `g_hmac_unref()`."],["compute_hmac_for_data","Computes the HMAC for a binary `data` of `length`. This is a convenience wrapper for `g_hmac_new()`, `g_hmac_get_string()` and `g_hmac_unref()`."],["console_charset",""],["dcgettext","This is a variant of [`dgettext()`][crate::dgettext()] that allows specifying a locale category instead of always using `LC_MESSAGES`. See [`dgettext()`][crate::dgettext()] for more information about how this functions differs from calling `dcgettext()` directly."],["dgettext",""],["dngettext",""],["dpgettext",""],["dpgettext2",""],["environ",""],["file_set_contents",""],["file_set_contents_full",""],["filename_display_basename",""],["filename_display_name",""],["format_size",""],["format_size_full",""],["host_name",""],["hostname_is_ascii_encoded",""],["hostname_is_ip_address",""],["hostname_is_non_ascii",""],["hostname_to_ascii",""],["hostname_to_unicode",""],["language_names",""],["language_names_with_category",""],["listenv",""],["locale_variants",""],["main_current_source",""],["main_depth",""],["markup_escape_text",""],["mkdir_with_parents",""],["mkdtemp",""],["mkdtemp_full",""],["mkstemp_full",""],["monotonic_time",""],["num_processors",""],["on_error_query",""],["on_error_stack_trace",""],["os_info",""],["random_double",""],["random_double_range",""],["random_int",""],["random_int_range",""],["random_set_seed",""],["real_time",""],["reload_user_special_dirs_cache",""],["set_application_name",""],["shell_parse_argv",""],["shell_quote",""],["shell_unquote",""],["spaced_primes_closest",""],["spawn_async",""],["spawn_check_exit_status",""],["spawn_check_wait_status",""],["spawn_command_line_async",""],["system_config_dirs",""],["system_data_dirs",""],["unicode_script_from_iso15924",""],["unicode_script_to_iso15924",""],["unlink",""],["user_cache_dir",""],["user_config_dir",""],["user_data_dir",""],["user_runtime_dir",""],["user_special_dir",""],["user_state_dir",""],["usleep",""],["uuid_string_is_valid",""],["uuid_string_random",""]]});